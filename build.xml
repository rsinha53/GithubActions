<project name="Sample usage of Salesforce Ant tasks" default="test" basedir="." xmlns:sf="antlib:com.salesforce">



    <property file="build.properties"/>
     <property environment="env"/>
 
 
 
    <!-- Setting default value for username, password and session id properties to empty string
          so unset values are treated as empty. Without this, ant expressions such as ${sf.username}
          will be treated literally.
     -->
     <condition property="sf.username" value=""> <not> <isset property="sf.username"/> </not> </condition>
     <condition property="sf.password" value=""> <not> <isset property="sf.password"/> </not> </condition>
     <condition property="sf.sessionId" value=""> <not> <isset property="sf.sessionId"/> </not> </condition>
     <condition property="sf.username1" value=""> <not> <isset property="sf.username1"/> </not> </condition>
     <condition property="sf.password1" value=""> <not> <isset property="sf.password1"/> </not> </condition>
     <condition property="sf.sessionId1" value=""> <not> <isset property="sf.sessionId1"/> </not> </condition>
     
     <path id="sf.classpath">
         <fileset dir="build-resources/lib">
                   <include name="**/*.jar" />
          </fileset>
     </path>
 
 
 
    <!--<taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
         <classpath>
             <pathelement location="../build-resources/lib/ant-salesforce.jar" />            
         </classpath>
     </taskdef>-->
     
     <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
         <classpath>
             <path refid="sf.classpath" />
         </classpath>
     </taskdef>
     
     <!-- Test out deploy and retrieve verbs for package 'mypkg' -->
     <target name="test">
       <!-- Upload the contents of the "mypkg" package -->
       <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="mypkg" rollbackOnError="true"/>
       <mkdir dir="retrieveOutput"/>
       <!-- Retrieve the contents into another directory -->
       <sf:retrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="retrieveOutput" packageNames="MyPkg"/>
     </target>
 
 
 
    <!-- Retrieve an unpackaged set of metadata from your org -->
     <!-- The file unpackaged/package.xml lists what is to be retrieved -->
     <target name="retrieveUnpackaged">
       <mkdir dir="retrieveUnpackaged"/>
       <!-- Retrieve the contents into another directory -->
       <sf:retrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="retrieveUnpackaged" unpackaged="unpackaged/package.xml"/>
     </target>
 
 
 
    <!-- Retrieve all the items of a particular metadata type -->
     <target name="bulkRetrieve">
       <sf:bulkRetrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" metadataType="${sf.metadataType}" retrieveTarget="retrieveUnpackaged"/>
     </target>
 
 
 
    <!-- Retrieve metadata for all the packages specified under packageNames -->
     <target name="retrievePkg">
       <sf:retrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="retrieveOutput" packageNames="${sf.pkgName}"/>
     </target>
 
 
 
    <!-- Deploy the unpackaged set of metadata retrieved with retrieveUnpackaged and run tests in this organization's namespace only-->
     <target name="deployUnpackaged">
       <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="retrieveUnpackaged" rollbackOnError="true"/>
     </target>
 
 
 
    <!-- Deploy a zip of metadata files to the org -->
     <target name="deployZip">
       <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" zipFile="${sf.zipFile}" pollWaitMillis="1000" rollbackOnError="true"/>
     </target>
 
 
 
    <!-- Shows deploying code & running tests for code in directory -->
     <target name="deployCodeToQA">
       <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
       <sf:deploy username="${sf.username}" password="${env.EFSQA}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="./testSrc" > <!--testLevel="RunSpecifiedTests" rollbackOnError="true"-->
            <!--<runTest>SampleDeployClass</runTest> -->
       </sf:deploy>
     </target>
    
     <!-- Shows deploying code & running tests for code in directory -->
     <target name="deployCodeToUAT">
       <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
       <sf:deploy username="${sf.usernameUAT}" password="${env.EFSUAT}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl_UAT}" maxPoll="${sf.maxPoll}" deployRoot="./testSrc" > <!--testLevel="RunSpecifiedTests" rollbackOnError="true"-->
            <!--<runTest>SampleDeployClass</runTest> -->
       </sf:deploy>
     </target>
     
     <!-- Shows deploying code & running tests for code in directory -->
     <target name="quickDeploy">
       <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
       <sf:deploy username="${sf.username}" password="${env.EFSQA}" sessionId="${sf.sessionIdDev}" serverurl="${sf.serverurlDev}" maxPoll="${sf.maxPollDev}" deployRoot="./testSrc" > </sf:deploy>
     </target>
   
      
 </project>
