<!---
* Component Name: ACETB360BenefitRedesignOveriew
* Author: Manish
* Created Date: 08/01/2021
* Description: Componenet for B360 Benefits
-->

<apex:component controller="ACETB360BenefitOveriewRedesignController" allowDML="true"  id="B360Component">
    <apex:includeScript value="{!$Resource.JQuery}" />
    <apex:includeScript value="{!$Resource.ACETBenefitAccordionJSExtend}"/>
    <apex:includeScript value="{!$Resource.ACETBenefitRedesignLanguageJquery}"/>
    <apex:includeScript value="{!URLFOR($Resource.ACETResources, '/js/vendor/chosen.jquery.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.ACETResources, '/js/vendor/chosen.jquery.min.planbenefit.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.ACETResources, '/css/vendor/chosen.min.css')}" />
    <link rel='stylesheet' href='//code.jquery.com/ui/1.11.3/themes/smoothness/jquery-ui.css'/>
    
    <apex:attribute type="String" name="attrGroupEffectiveDate" description="attrGroupEfectiveDate" assignTo="{!groupEffectiveDate}" />
    <apex:attribute type="String" name="attrGroupRenewalDate" description="attrGroupRenewalDate" assignTo="{!groupRenewalDate}" />
    <apex:attribute type="String" name="attrGroupId" description="HoldsGroupid" assignTo="{!groupId}" />
    <apex:attribute type="String" name="attrBenefitBundleOptionId" description="HoldsBundleid" assignTo="{!benefitBundleOptionId}" />
    <apex:attribute type="String" name="attrEffectiveDate" description="HoldsEffectiveDate" assignTo="{!effectiveDate}" />
    <apex:attribute type="String" name="attrEndDate" description="HoldsEndDate" assignTo="{!endDate}" />
    
    <style>
        
        .benefitFilter {
            padding: 10px 16px;   
            
        }
    
        .content {
          //padding: 16px;
        }
    
        .sticky {
          position: fixed;
          top: 0;
          width: 98.2%;
          margin-left:-2%; 
          background-color:rgb(248,248,248);
          border-bottom: 2px solid black;
        //  margin-left:-40px;
            z-index:1000;
        }
    
        .sticky + .content {
          padding-top: 120px;
        }
        
        .tblBgClr{
            background-color: #dddddd;
        }
        
        .chosen-container {
            width: 18pc !important;
            border: 1px solid #d8dde6;
        }
        .slds-button {
            position: relative !important; 
            display: inline-block;
            padding: 0;
            background: 0 0;
            background-clip: border-box;
            border-radius: .25rem;
            font-size: .75rem;
            line-height: 1.875rem;
            text-decoration: none;
            white-space: normal;
            user-select: none;
            transition: color 50ms linear,background-color 50ms linear;
        }
        .slds-Bb{
        padding-left: 1rem;
        padding-right: 1rem;
        text-align: center;
        vertical-align: middle;
        background-color: #0070d2;
        border: 1px solid #0070d2;
        color: #fff;
        }
        .ageRange {
            height: 15px;
            width: 15px;
        }
        
        .boxStyle{
            border:1px solid #d3d3d3;
            border-radius:4px;            
            color:#555555;
            padding: .5em .5em .5em .7em;
            position: relative;
            display: block;
            font-size: 100%;    
            margin: 2px 0 0 0;
            font-weight: normal;!important;
            font-size: 13px;
        }
       .search-choice{
           width:100%;
       }
       .chosen-container{
             min-width: 18pc;
             width: auto !important;
             max-width: 70pc;  
       } 
       .chosen-container-multi .chosen-choices li.search-choice{
           width: auto !important;
           white-space: nowrap;
           overflow: hidden;
           text-overflow: ellipsis;
       }
       .ui-tooltip{
            max-width: 800px !important;
       }
       .input-width{
            width:70%;
        	min-width:150px;
        }
        .align-left{
        float: left;
        }
        .psmall-left{
         padding-left:1%;
        }
        .psmall-top{
        padding-top:1%;
        }
        .mhalf-top{
        	margin-top:50%;
        }
        .bg-gray{
        background-color:gray;
        }
        .b360-accordion .ui-accordion-header, .b360-accordion .net-accordion .ui-accordion-header{
            color: blue;
            font-weight:bold;
        }
        .b360-accordion .ui-accordion-content, .b360-accordion .net-accordion .ui-accordion-content{
            font-size: 12px;
        }
        .inline{
            display:inline;
        }
        .half-width{
            width:50%;
        }
        .full-width{
        	width:100%;
        }
        .bold-label{
        color:black;
        font-size:12px;
        font-weight:bold;
        }
        <!--.ui-accordion-header{
            background: none;
            border:none;
            border-bottom: 2px solid black;
            border-radius: 0px;
            outline: none;
            color: blue;
            font-weight:bold;
        }
         .ui-accordion-content{
            
            background-color: white;
            border:none;
            border-bottom: 2px solid black;
            border-radius: 0px;
            font-size: 12px;
            outline: none;
        }
        .net-accordion .ui-accordion-header{
            background:none;
            border:none;
            border: 1px solid black;
            border-radius: 0px;
            outline: none;
            color: blue;
        }
        .net-accordion .ui-accordion-content{
            background-color: white;
            border:none;
            border-bottom: 1px solid black;
            border-radius: 0px;
            outline: none;
        }-->
        
    </style>
    <html lang='en'>
        <head>
            <meta charset='utf-8' />
            <script>
            var allowIconChange = false;
            var previouslySelectedBenefitcodes= null;
            var viewBenefitsView = false;
            var specialtyList = [];
            var viewBenefitButtonSelectedOptions = [];
            var prevSelBenCatList = [];
            var selectedBenefitCodes = [];
            var catAccordionDiv;
            var catAccordionHead;
            var benCatStr;
            var benSearchType;
            var today = new Date();
            var todayDateWithSlash = formatDateWithSlash(today);
            
            $(document).ready(function(){
                initB360UI();
                initAsOfDate();
                onB360PageLoad();
                customB360DatePickerBenefits();
                
            });
            function initB360Autodoc(){
                 acet.autodoc.startAutodoc();
            }
            function formatDateWithSlash(dateVar){
                var dd = dateVar.getDate();
                var mm = dateVar.getMonth()+1; //January is 0!
                
                var yyyy = dateVar.getFullYear(); 
                if(dd<10){
                    dd='0'+dd;
                } 
                if(mm<10){
                    mm='0'+mm;
                } 
                var formattedDate = mm+'/'+dd+'/'+yyyy;
                return formattedDate;
             }
                
            function customB360DatePickerBenefits() {
                $("#benefitDateSearch").datepicker({
                    changeMonth: true,
                    changeYear: true
                });
            }
            function collapseB360ExapandedSections(){
                
                var actAccs = $("[id$='pageBlockB360BenPanel']").find('.ui-state-active');
                console.log(actAccs);
                /*for(var i = 0; i<actAccs.length(); i++){
                    console.log(actAccs[i];
                 }*/
                
                
            }
            function populateCurrentDateB360Ben() {
                
                var today = new Date();
                today = formatDateWithSlash(today);
                
                $("#benefitDateSearch").val(today);
                loadBenCatOnDateChange();
                
                return false;
            } 
            function hideB360BenSection() {                
                 
                $("[id$='pageBlockB360BenPanel']").hide();     
                viewBenefitsView = false;
            }
            function showB360BenSection() {      
               
                $("[id$='pageBlockB360BenPanel']").show();     
                viewBenefitsView = true;
            }
            function initAsOfDate(){
                	var $dateSearch = $("#benefitDateSearch");
                    var effectiveDate = '{!effectiveDate}';
                    var convertedEffectiveDate = new Date(effectiveDate);
                    var endDate = '{!endDate}';
                    var convertedEndDate = new Date(endDate);
                    var todayDate = new Date();
                    var populateDate ='';
                    if(convertedEffectiveDate != null && convertedEffectiveDate != '' && convertedEndDate != null && convertedEndDate != '') {
                    if((convertedEndDate >= todayDate) && (convertedEffectiveDate < todayDate)) {
                        populateDate = todayDate;
                    }else if (convertedEndDate < todayDate) {
                        populateDate =convertedEndDate;
                    }else if((convertedEffectiveDate > todayDate) && (convertedEndDate >= todayDate)) {
                        populateDate =convertedEffectiveDate;
                    }  
                    } 
                    if(populateDate != null && populateDate  != '') {
                       
                       var today = formatDateWithSlash(populateDate);
                       $("#benefitDateSearch").val(today);
                    }
                }
            function initB360UI() {
                clearB360UI();
                
                $('#b360BenCatList option').each(function() {
                    console.log('codes---->'+$(this).text());
                    if($(this).text()=='null'||$(this).text()=='NULL'||$(this).text()==''||$(this).text()=='null%'){
                        $(this).remove();
                    }
                });
                
                $('#b360BenCatList').chosen({width: "%"});
                
                //Prevent Enter Key Pressed Action for Keyword Search Input
                $("#keywordInput").keydown(function(event) {
                    if(event.which == 13 || event.keyCode == 13){
                            event.preventDefault();
                    }
                });
                //Prevent Enter Key Pressed Action for Benefit Category Dropdown
                $(".chosen-container-multi").keydown(function(event) {
                        if(event.which == 13 || event.keyCode == 13){
                            event.preventDefault();
                        }
                  });
                
                if(GetIEVersion() > 0){
                    var currUrl = window.location.href;
                    if(currUrl.indexOf('ACETGroupPlanBenefitDetailRedesign') > 0){
                        $("#benefitDateRequiredBlock").css("top", "-14px");
                        $("#benefitDateRequiredBlock").css("bottom", "-8px");
                    }else{
                        $("#benefitDateRequiredBlock").css("top", "-4px");
                        $("#benefitDateRequiredBlock").css("bottom", "-4px");
                    }
                }else{
                    $("#benefitDateRequiredBlock").css("top", "-4px");
                    $("#benefitDateRequiredBlock").css("bottom", "-4px");
                }
            }
            function b360CatDropdownClicked(){
                var scrollTop = $(window).scrollTop();
                var topOffset = $(".dropdown").offset().top;
                var relativeOffset = topOffset-scrollTop;
                var windowHeight = $(window).height();
                if(relativeOffset > windowHeight/2){
                    $('.chosen-drop').css({'top':'auto',"bottom":"100%","border-top-width":"1px"});
                }
                else{
                    $('.chosen-drop').css({'top':'100%',"bottom":"auto","border-top-width":"0px"});
                }
            }
            function clearB360UI(){
                // clearAllErrorMessage();
                hideB360BenSection();
                clearBenCatSelect();
                clearKeySearchInput();
            }
            function clearBeforeServiceCall(){
                clearAllErrorMessage();
                hideB360BenSection();
            }
            function clearBenCatSelect(){
                $("#b360BenCatList").val([]).trigger("chosen:updated");
            }
            function clearKeySearchInput(){
                $("#keywordInput").val('');
            }
            function clearAllErrorMessage(){
                $('#errorMsgForCategorySearch').html('');
                $('#errorMsgForKeywordSearch').html('');
                $("[id$='errorMsgForB360BenDate']").html('');
                $("[id$='b360PageErrorMsg']").hide();
            }
            function validateBenCat(){
                var selectedBenefitCategories = $('#b360BenCatList').chosen().val();
                if(!selectedBenefitCategories || selectedBenefitCategories.length == 0){
                    $('#b360BenCatList').focus();
                    $('#errorMsgForCategorySearch').html('Error: You must select a value');
                    return false;
                }
                return true;
            }
            function validateKeySearch(){
                var searchedKey = $("#keywordInput").val();
                if(!searchedKey){
                    $("#keywordInput").focus();
                    $('#errorMsgForKeywordSearch').html('Error: You must enter a value');
                    
                    return false;
                } 
                return true;
            }
            function validateB360BenDate() {
                var pattern =/^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
                
                var selectedBenefitDateVal = $("#benefitDateSearch").val();
                var selectedBenefitDate = new Date(selectedBenefitDateVal);
                
                var benefitEffectiveDateVal = '{!effectiveDate}';
                var benefitEffectiveDate = new Date(benefitEffectiveDateVal);
                
                var benefitEndDateVal = '{!endDate}';
                var benefitEndDate = new Date(benefitEndDateVal);
                
                var groupEffectiveDateVal = '{!groupEffectiveDate}';
                var groupEffectiveDate = new Date(groupEffectiveDateVal);
                
                var groupRenewalDateVal = '{!groupRenewalDate}';
                var groupRenewalDate = new Date(groupRenewalDateVal);
                
                var $groupId = '{!groupId}';
                $("[id$='errorMsgForB360BenDate']").html('');
                
                if(!selectedBenefitDateVal){ 
                        var errorMsg = 'You must enter a value';
                        $("[id$='errorMsgForB360BenDate']").html('Error: '+errorMsg);
                        $("#benefitDateSearch").focus();
                        return false;
                    }
                if(!pattern.test(selectedBenefitDateVal) || !Date.parse(selectedBenefitDateVal)){
                    var errorMsg = "Invalid Date.";
                    $("[id$='errorMsgForB360BenDate']").html('Error: '+errorMsg);
                    $("#benefitDateSearch").focus();
                    return false;
                }else if(selectedBenefitDate && (selectedBenefitDate < benefitEffectiveDate || selectedBenefitDate > benefitEndDate)){                    
                    var errorMsg = "Date selected outside of coverage period.";
                    $("[id$='errorMsgForB360BenDate']").html('Error: '+errorMsg);
                    $("#benefitDateSearch").focus();
                    return false;
                }else if(selectedBenefitDate && (selectedBenefitDate < groupEffectiveDate || selectedBenefitDate > groupRenewalDate)){                    
                    var errorMsg = "Date selected outside of coverage period.";
                    $("[id$='errorMsgForB360BenDate']").html('Error: '+errorMsg);
                    $("#benefitDateSearch").focus();
                    return false;
                }
                var formattedSelectedBenDate = formatDateWithSlash(selectedBenefitDate);
                $("#benefitDateSearch").val(formattedSelectedBenDate);
                return true;
            }
            function removeB360BenJS(lastChangedOption){ 
                
                var selBenefitCatList = $('#b360BenCatList').chosen().val();
                if(selBenefitCatList){
                    var selBenCatCount = selBenefitCatList.length;
                    //Selecting only one i.e last selected Option
                    if(selBenCatCount > 1){
                        var LastSelBenefitCat = (prevSelBenCatList[0] == selBenefitCatList[0]) ? selBenefitCatList[1] : selBenefitCatList[0];
                        
                        $("#b360BenCatList").val([LastSelBenefitCat]).trigger("chosen:updated");
                    }
                    var selBenefitCatList = $('#b360BenCatList').chosen().val(); 
                    console.log('>>>Selected Benefit Category : '+ selBenefitCatList);
                    prevSelBenCatList = selBenefitCatList;
                }
                
                if(benSearchType == 'category')
                    hideB360BenSection();  
                //collapseB360ExapandedSections();  
            }
            function GetIEVersion() {
                var sAgent = window.navigator.userAgent;
                var Idx = sAgent.indexOf("MSIE");            
                // If IE, return version number.
                if (Idx > 0) 
                    return parseInt(sAgent.substring(Idx+ 5, sAgent.indexOf(".", Idx)));
                
                // If IE 11 then look for Updated user agent string.
                else if (!!navigator.userAgent.match(/Trident\/7\./)) 
                    return 11;            
                else
                    return 0; //It is not IE
            }
            function loadBenCatOnDateChange(){
                if(!validateB360BenDate())
                    return false;
                clearB360UI();
                var selBenDate = $("#benefitDateSearch").val();
                updateBenDate(selBenDate);
                
            }
            function storeBenCategory(b360BenefitCategoryStr)
            {
                benCatStr = b360BenefitCategoryStr;
            }
            
            function searchCategory()
            {
                clearBeforeServiceCall();
                clearKeySearchInput();
                
                if(!validateB360BenDate())
                    return false;
                if(!validateBenCat())
                    return false;
                
                benSearchType = 'category';
                var selectedBenefitCategories = $('#b360BenCatList').chosen().val();
                var selcetedCategory = selectedBenefitCategories[0];
                getChildBenefitCategory(selcetedCategory, benCatStr);
            }
            function initBenefitAccordion(){
                 $(".b360-accordion").accordion({
                    header: "h3",
                    active:false,
                    autoHeight:false,
                    heightStyle: "content",
                    collapsible: true
                });
            }
            function initNetworkAccordion(networkEle){
                 $(networkEle).accordion({
                    header: "h4",
                    active:false,
                    autoHeight:false,
                    heightStyle: "content",
                    collapsible: true
                });
            }
            function getBenSec(accordionEleHead){
                clearAllErrorMessage();
                //Accordion Collapse
                if($(accordionEleHead).hasClass('ui-state-active'))
                {
                    return false;
                }
                //Accordion Expand
                //Get Benefit Section Service is not being called if the service already called successfully once
                //Comment the below condition if we want to call on every expand
                if($(accordionEleHead).data('service-called') == 'true') {
                    collapseB360ExapandedSections();
                    return false;
                }
                //Call Get Benefit Section Service
                if(!$(accordionEleHead).hasClass('ui-state-active')){
                    catAccordionHead = accordionEleHead;
                    var catAccordion = $(accordionEleHead).parent();
                    if(!catAccordion) return;
                    var catAccordionDivs = $(catAccordion).find('div')
                    
                    if(catAccordionDivs.length == 0)
                    {
                        catAccordionDiv = document.createElement('div');
                        $(catAccordion).append(catAccordionDiv);
                    }
                    else
                      catAccordionDiv = catAccordionDivs[0];  
                            
                    $(catAccordionDiv).html('');
                    var benefitId = $(accordionEleHead).data('benefit-id');
                    console.log('>>>Benefit Id : '+benefitId);
                    callBenefitSection(benefitId)
                }
            }
            function searchKeyword()
            {
                clearBeforeServiceCall();
                clearBenCatSelect();
                
                if(!validateB360BenDate())
                    return false;
                if(!validateKeySearch())
                    return false;
                
                benSearchType = 'keyword';
                var searchedKey = $("#keywordInput").val();
                getKeywordBenefit(searchedKey);
            }
            function initBenefitSection(benefitSectionsStr){
                
                if(!benefitSectionsStr || !catAccordionDiv) return;
                
                var benefitSections = JSON.parse(benefitSectionsStr);
               	if(benefitSections && benefitSections.length > 0){
                    //Get Benefit Section service called successfully
                    $(catAccordionHead).data('service-called','true');
                }
                benefitSections.forEach(function(benefitSection,index){
                    var benContentDiv = document.createElement('div');
                    if(benefitSection.benefitName){
                        var benHeader = document.createElement('b');
                        $(benHeader).append(benefitSection.benefitName);
                        $(benContentDiv).append(benHeader);
                        $(benContentDiv).append(document.createElement('br'));
                    }
                    if(benefitSection.benefitNetworkSection)
                    {
                        benefitSection.benefitNetworkSection.forEach(function(benNetwork,index){
                            
                            var netDivHeader = document.createElement('h4');
                            if(benNetwork.networkTypeDescription && benNetwork.networkTypeDescription.length > 0){
                                $(netDivHeader).append(benNetwork.networkTypeDescription[0]);
                            }
                            var netDivContent = document.createElement('div');
                            if(benNetwork.networkLanguageDescription){
                                $(netDivContent).append(benNetwork.networkLanguageDescription);
                            }
                            var netDiv = document.createElement('div');
                            $(netDiv).addClass('net-accordion');
                            $(netDiv).append(netDivHeader);
                            $(netDiv).append(netDivContent);
                            $(benContentDiv).append(netDiv);
                            initNetworkAccordion(netDiv);  
                        });
                        $(benContentDiv).append(document.createElement('br'));
                    }
                    if(benefitSection.benefitLanguageDescription){
                        $(benContentDiv).append(benefitSection.benefitLanguageDescription);
                        $(benContentDiv).append(document.createElement('br'));
                    }
                    if(benefitSection.benefitLimitAndException)
                    {
                        var boldEle = document.createElement('b');
                        $(boldEle).append('Limit & Exceptions : ');
                        $(benContentDiv).append(boldEle);
                        $(benContentDiv).append(document.createElement('br'));
                        benefitSection.benefitLimitAndException.forEach(function(benLimit,index){
                            boldEle = document.createElement('b');
                            $(boldEle).append(benefitSection.benefitLimitAndException[0].description + ' : ');
                            $(benContentDiv).append(boldEle);
                            $(benContentDiv).append(benefitSection.benefitLimitAndException[0].details);
                            $(benContentDiv).append(document.createElement('br'));
                        });
                    }
                    $(benContentDiv).append(document.createElement('br'));
                    $(catAccordionDiv).append(benContentDiv);
                    
                });
            }
            
            </script>
        </head>
        <body>
            
            <apex:actionFunction name="updateBenDate" status="b360Status" oncomplete="onB360PageLoad();">
                <apex:param name="benefitDateSearch" assignTo="{!benefitDateSearch}" value=""/>
            </apex:actionFunction>
            <apex:actionFunction name="onB360PageLoad" action="{!getBenefitAvailable}" status="b360Status" reRender="b360PageErrorMsg" onComplete="getBenefitCategory();"/>
            <apex:actionFunction name="getBenefitCategory" action="{!getB360BenefitCategoryList}" status="b360Status" reRender="b360PageErrorMsg,b360BenCatPanel" onComplete="initB360UI();initB360Autodoc();storeBenCategory('{!JSENCODE(b360BenefitCategoryStr)}');"/>
            <apex:actionFunction name="getChildBenefitCategory" action="{!getChildCategory}" status="b360Status" reRender="b360PageErrorMsg,pageBlockB360BenPanel" onComplete="initBenefitAccordion();showB360BenSection();">
                <apex:param name="selectedCategory" assignTo="{!selectedCategory}" value=""/>
                <apex:param name="benCatStr" assignTo="{!b360BenefitCategoryStr}" value=""/>
            </apex:actionFunction>
            <apex:actionFunction name="getKeywordBenefit" action="{!benefitKeywordSearch}" status="b360Status" reRender="b360PageErrorMsg,pageBlockB360BenPanel" onComplete="initBenefitAccordion();showB360BenSection();">
                <apex:param name="searchedKeyword" assignTo="{!searchedKeyword}" value=""/>
            </apex:actionFunction>
            
            <apex:actionFunction name="callBenefitSection" action="{!getBenefitSection}" status="b360Status" reRender="b360PageErrorMsg" onComplete="initBenefitSection('{!JSENCODE(benefitSectionsStr)}');">
                <apex:param name="benefitId" assignTo="{!benefitId}" value=""/>
            </apex:actionFunction>
            <apex:actionStatus id="b360Status">
                <apex:facet name="start">
                    
                    <div style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; opacity: 0.25; z-index: 1000; background-color: black;">
                         
                    </div>
                    <div style="position: fixed; left: 45%; top: 45%;z-index: 1001;">
                        <div style="display: inline-block; padding: 2px; background-color: #fff; width: 125px;">
                            <img src="/img/loading.gif" style="float: left; margin: 8px;" />
                            <span style="display: inline-block; padding: 10px 0px;">Loading...</span>
                        </div>
                    </div>
           
                </apex:facet>
            </apex:actionStatus>            
               
            <apex:pageBlockSection title="Benefit Details" id="pbsBenefitDetail" columns="1" >
               
                
                <apex:pageBlock id="pBlockbenefitDetail" >
                    
                    <c:ValidateData typeVal="Plan Benefits Detail"/> 
                  
                    <apex:outputPanel id="pBlockbenefitDetailPanel">
                             
                        <div id="benefitFilter" class="benefitFilter">
                            <div>
                                
                            <b>Benefit As Of &nbsp;&nbsp;&nbsp;&nbsp;</b> 
                            <div class="requiredInput" style="display:inline;" >
                                <div class="requiredBlock" id="benefitDateRequiredBlock"></div>
                                <input type="text" id="benefitDateSearch" html-placeholder="MM/DD/YYYY" label="Date" value="{!benefitDateSearch}" style="width: 6%;"  onkeyPress="" onchange="loadBenCatOnDateChange();"/>
                
                            </div>      
                            <apex:commandLink value="{!currentDateBenefits}" onclick="populateCurrentDateB360Ben(); return false;" id="populateCurrentDateB360Ben">
                            </apex:commandLink>&nbsp;&nbsp;&nbsp;&nbsp;
                            
                            <span id="errorMsgForB360BenDate" class="errorMsg"></span>
                            </div>
                            
                            <div class="psmall-top">
                            <apex:pageBlockSection columns="2">
                               <apex:pageBlockSectionItem labelStyle="width:7%;">
                                  
                                      <apex:outputpanel > 
                                          <b><apex:outputLabel value="Choose Category" styleClass="bold-label" escape="false"  for="b360BenCatList"/></b>
                                          <br/>
                                          <input type="button" class="slds-button slds-Bb" value="Search" id="categorySearch" onClick="searchCategory()"/> 
                                      </apex:outputpanel>
                                    
                           
                                    <apex:outputpanel id="b360BenCatPanel" style="width:16% !important" styleClass="dropdown"> 
                                        <div id = 'b360BenCatDiv' onClick="b360CatDropdownClicked()">
                                            <select id="b360BenCatList" multiple="true" data-placeholder="Choose Category" onchange="removeB360BenJS(this)"  >
                      
                                                <apex:repeat value="{!b360BenefitCategory.benefitCategoryList}" var="benefitCategory" >
                                                    <option value="{!benefitCategory}" >{!benefitCategory}</option>
                                                </apex:repeat>
                                            </select> 
                                          </div>
                                        <div id="errorMsgForCategorySearch" class="errorMsg">
                                            
                                        </div>
                                    </apex:outputpanel>
                                    
                                    </apex:pageBlockSectionItem>
                                
                                    <apex:pageBlockSectionItem dataStyleClass="float-left">
                                    
                                        <apex:outputpanel > 
                                            <apex:outputLabel value="Search Benefit" styleClass="bold-label" escape="false" for="keywordSearch"/>
                                            <br/>
                                            <input type="button" class="slds-button slds-Bb" value="Search" id="keywordSearch" data-placeholder="Choose Benefit" onClick="searchKeyword();"/> 
                                        </apex:outputpanel>
                                    
                                   
                                    <apex:outputpanel >
                                        <input type="search" class="input-width" value="" id="keywordInput" placeholder="Search Benefit"/>
                                        
                                        <div id="errorMsgForKeywordSearch" class="errorMsg">
                                            
                                        </div>
                                    </apex:outputpanel>
      
                                </apex:pageBlockSectionItem>
                                    
                            </apex:pageBlockSection>
                               
                            </div>
                       
                         </div>
                        <div class="content">
                                
                           
                            <apex:outputPanel id="pageBlockB360BenPanel"> 
                                
                                    <apex:repeat value="{!selectedChildCategory}" var="childCat" id="b360ChildDivRender">
                                            <table>
                                                <tr>
                                                	<td>
                                                        <input class="mhalf-top" type='checkbox' html-auto-doc-accordian='true' html-auto-doc-ben-date-field-id="b360BenDateSearch" value='{!childCat.categoryName}'/>
                                                    </td>
                                                    <td class="full-width">
                                                        <div class="b360-accordion">  
                                                            <h3 data-benefit-id="{!childCat.benefitId}" data-service-called="false" onClick="getBenSec(this)">{!childCat.categoryName}</h3>
                                                            <div class="benContent">
                                                            
                                                            </div>
                                                        </div>
                                                    </td>
                                                 </tr>
                                            </table>
                                    </apex:repeat>    
                                
                            </apex:outputPanel>    
                            
                        </div>
                        
                        
                        
                    </apex:outputPanel>
                    
                </apex:pageBlock>  
            </apex:pageBlockSection>
        </body>
    </html>
</apex:component>