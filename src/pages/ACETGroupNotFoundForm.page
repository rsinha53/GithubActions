<apex:page controller="ACETGroupNotFoundController" sidebar="false" 
tabStyle="Group_Search__tab"    docType="html-5.0">
     <script type="text/javascript" src="{!$Label.ACETDynatraceJSURL}" data-dtconfig="{!$Label.ACETDynatrace_config}|reportUrl={!$Label.ACETDynatraceReportURL}|tp=500,50,0,1" crossorigin="anonymous"></script>
    <apex:includeScript value="/support/console/37.0/integration.js" />
    <apex:includeScript value="{!$Resource.JQuery}"></apex:includeScript>
    <apex:includeScript value="{!$Resource.JqueryPhoneMask}"/>
    <apex:sectionHeader title="Enter Group Information" />
    <apex:form >
        <apex:pageMessages id="pmMessages" />
        <apex:pageBlock Id="pbGroupNotFound">
            <apex:pageblockSection columns="2">
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Employer Name "></apex:outputLabel>
                   <apex:outputPanel >
                        <div class="requiredInput">
                            <div class="requiredBlock" />
                            <apex:inputText value="{!GName}" id="EmployerName"
                                maxlength="10" />
                        </div>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                   <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Contact Name"></apex:outputLabel>
                    <apex:outputPanel >
                        <div class="requiredInput">
                            <div class="requiredBlock" />
                            <apex:inputText value="{!ContactName}" id="ContactName"
                                maxlength="40" />
                        </div>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
              
               <apex:pageBlockSectionItem >
                   <apex:outputLabel value="Group Number "></apex:outputLabel>
                  <apex:inputText value="{!GId}" id="groupNumber" maxlength="10" />   
                </apex:pageBlockSectionItem>       
                   
                  
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Zip Code"></apex:outputLabel>
                    <apex:inputtext value="{!zipcode}" id="zipcode" maxlength="5" />
                </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="State"></apex:outputLabel>
                        <apex:outputPanel layout="none">
                            <c:ACETState ></c:ACETState>
                            <!-- to pass value back when the input is disabled in form -->                            
                            <apex:inputHidden id="stateHidden" value="{!State}" />
                        </apex:outputPanel>
                </apex:pageBlockSectionItem>                
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Phone Number"></apex:outputLabel>
                    <apex:outputPanel >
                        <div class="requiredInput">
                            <div class="requiredBlock" />
                           <apex:inputText value="{!PhoneNumber}" id="phoneNumber" styleClass="phoneNumbMask" />
                        </div>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
            </apex:pageblockSection>
            <apex:pageBlockButtons location="bottom" style="align:center;">            
                <apex:commandButton value="Submit" action="{!RedirectFromGroupNotFound}" onClick="return validate();"/>
                <apex:commandButton value="Cancel" onClick=" testCloseTab();" />
            </apex:pageBlockButtons>
            
        </apex:pageBlock>
    </apex:form>
    <script type="text/javascript">
    var j$ = jQuery.noConflict(); 
            var $GroupNotFound = j$("[id$='pbGroupNotFound']");
            var $EmployerName = j$("[id$='EmployerName']");
            var $ContactName= j$("[id$='ContactName']");
            var $zipcode = j$("[id$='zipcode']");
            var $phoneNumber = j$("[id$='phoneNumber']");
            var $groupNumber = j$("[id$='groupNumber']");
            var $state = j$("[id$='state']");
            var $phoneNumber = j$("[id$='phoneNumber']");
            
    function validate(){   
            $GroupNotFound.find(".pbError").remove();
            $EmployerName.removeClass("error").parent().find(".errorMsg").remove();
            $zipcode.removeClass("error").parent().find(".errorMsg").remove();
            $phoneNumber.removeClass("error").parent().find(".errorMsg").remove();
            $ContactName.removeClass("error").parent().find(".errorMsg").remove();
            $state.removeClass("error").parent().find(".errorMsg").remove();            
            var result = true;            
        
        
        j$("[id$='stateHidden']").val(j$("[id$='searchstate']").val());
  
     
        if($zipcode.val()) {
         if($zipcode.val().length < 5) {                   
              var errorMsg = "Enter a valid 5 digit Zip Code";
              $zipcode.addClass("error").parent().append('<div class="errorMsg"><strong>Error:</strong> ' + errorMsg + '</div>');
             result = false;
         }
        }
        if($phoneNumber.val()) {
            
            console.log('phonenumber--->length--->' + $phoneNumber.val().length );
         if($phoneNumber.val().length < 12) {                 
              var errorMsg = "Enter a valid 10 digit number";
              $phoneNumber.addClass("error").parent().append('<div class="errorMsg"><strong>Error:</strong> ' + errorMsg + '</div>');
             result = false;
         }
        }
        
        console.log('phonenumber-1--> ' + $phoneNumber.val());
        if(!$phoneNumber.val()) {
         console.log('phonenumber---> ' + $phoneNumber.val());
         var errorMsg = "You must enter a value";
         $phoneNumber.addClass("error").parent().append('<div class="errorMsg"><strong>Error:</strong> ' + errorMsg + '</div>');
         result = false;
        }
        
        if(!$EmployerName.val()) {
         var errorMsg = "You must enter a value";
         $EmployerName.addClass("error").parent().append('<div class="errorMsg"><strong>Error:</strong> ' + errorMsg + '</div>');
         result= false;  
        }
        
        if(!$ContactName.val()) {
         var errorMsg = "You must enter a value";
         $ContactName.addClass("error").parent().append('<div class="errorMsg"><strong>Error:</strong> ' + errorMsg + '</div>');
         result= false;  
        }

        
        if (!result)
        {        
         $GroupNotFound.prepend('<div class="pbError">{!$Label.ACETMemberSearchInvalidDataErrorMessage}<br/>{!$Label.ACETMemberSearchReviewErrorMessage}</div>');
        }
        if(result)
        {
            sforce.console.setTabTitle('Detail - ' + $EmployerName.val());

        }        
        
        return result;    
    }
    
 function isValidDate(dateStr) {
            var datePat = /^(\d{1,2})(\/|-)(\d{1,2})\2(\d{2}|\d{4})$/;
            var matchArray = dateStr.match(datePat);
            if (matchArray == null) {
                return false;
            }
            month = matchArray[1]; // parse date into variables
            day = matchArray[3];
            year = matchArray[4];
            if (month < 1 || month > 12) { // check month range
                return false;
            }
            if (day < 1 || day > 31) {
                return false;
            }
            if ((month==4 || month==6 || month==9 || month==11) && day==31) {
                return false
            }
            if (month == 2) { // check for february 29th
            var isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0));
            if (day>29 || (day==29 && !isleap)) {
                return false;
               }
            }
            return true;  // date is valid
        }

    
  function init()
    {           
        $phoneNumber.keypress(AllowDigitsOnly); 
        $zipcode.keypress(AllowDigitsOnly);
        j$("[id$='state']").val(j$("[id$='stateHidden']").val()); 
          
    }                   
    
    function AllowDigitsOnly(InputElement) 
    {
        //Allow delete, tab, enter and escape keys through
        if (/^(8|9|13|27)$/.test("" + InputElement.keyCode)) 
        {
            return true;
        }
        
        var regex = new RegExp("^[0-9]+$");
        var str = String.fromCharCode(!InputElement.charCode ? InputElement.which : InputElement.charCode);
        if (regex.test(str)) 
        {
            return true;
        }
        
        InputElement.preventDefault();
        return false;
    }
    
    
    j$(document).ready(function() {          
        init();    
        j$('.phoneNumbMask').mask('000-000-0000',{
                        translation : {
                            'N' : {
                                pattern : /[0-9]/,
                                optional : false
                            }
                        }   
         });               

    });        
    function testCloseTab() {
        sforce.console.getEnclosingTabId(closeSubtab);
    }
    
    var closeSubtab = function closeSubtab(result) {
        //Now that we have the tab ID, we can close it
        var tabId = result.id;
        sforce.console.closeTab(tabId);
    };

    </script>
</apex:page>